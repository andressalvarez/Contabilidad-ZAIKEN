{
  "name": "backend",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "prisma:generate": "prisma generate",
    "prisma:migrate": "prisma migrate dev",
    "prisma:migrate:prod": "prisma migrate deploy",
    "prisma:studio": "prisma studio",
    "db:seed": "ts-node prisma/seed.ts",
    "import:data": "ts-node data-importer.ts",
    "import:backup": "ts-node data-importer.ts ./backup_2025-07-15.json",
    "import:backup:debug": "ts-node data-importer.ts ./backup_2025-07-15.json",
    "db:clean": "rm -f ./dev.db && npx prisma migrate dev --name clean_start",
    "db:reset": "npm run db:clean && npm run import:backup:debug",
    "db:migrate:postgres": "npx prisma migrate dev --name migrate_to_postgresql",
    "db:setup:postgres": "npm run db:migrate:postgres && npm run import:backup:debug",
    "db:studio": "npx prisma studio",
    "pgweb": "start-pgweb.bat",
    "postgres:setup": "powershell -ExecutionPolicy Bypass -File setup-postgresql.ps1",
    "postgres:migrate": "npx prisma migrate dev --name migrate_to_postgresql",
    "postgres:import": "npm run postgres:migrate && npm run import:backup:debug",
    "import:backup:new": "ts-node scripts/import-backup.ts ./backup_2025-07-15.json",
    "import:backup:wipe-tx": "ts-node scripts/import-backup.ts ./backup_2025-07-15.json --wipe-tx",
    "import:backup:wipe-all": "ts-node scripts/import-backup.ts ./backup_2025-07-15.json --wipe-all",
    "import:backup:clean": "npm run db:clean && npm run import:backup:new",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "postgres:docker": "npm run docker:up && npm run postgres:import",
    "analyze:categories": "ts-node category-analyzer.ts"
  },
  "dependencies": {
    "@nestjs/class-transformer": "^0.4.0",
    "@nestjs/class-validator": "^0.13.4",
    "@nestjs/common": "^11.0.1",
    "@nestjs/config": "^4.0.2",
    "@nestjs/core": "^11.0.1",
    "@nestjs/jwt": "^11.0.0",
    "@nestjs/mapped-types": "^2.1.0",
    "@nestjs/passport": "^11.0.5",
    "@nestjs/platform-express": "^11.0.1",
    "@nestjs/platform-socket.io": "^11.1.4",
    "@nestjs/websockets": "^11.1.4",
    "@prisma/client": "^6.12.0",
    "bcrypt": "^6.0.0",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.2",
    "prisma": "^6.12.0",
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.1"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3.2.0",
    "@eslint/js": "^9.18.0",
    "@nestjs/cli": "^11.0.0",
    "@nestjs/schematics": "^11.0.0",
    "@nestjs/testing": "^11.0.1",
    "@swc/cli": "^0.6.0",
    "@swc/core": "^1.10.7",
    "@types/bcrypt": "^5.0.2",
    "@types/express": "^5.0.0",
    "@types/jest": "^29.5.14",
    "@types/node": "^22.10.7",
    "@types/supertest": "^6.0.2",
    "eslint": "^9.18.0",
    "eslint-config-prettier": "^10.0.1",
    "eslint-plugin-prettier": "^5.2.2",
    "globals": "^16.0.0",
    "jest": "^29.7.0",
    "prettier": "^3.4.2",
    "source-map-support": "^0.5.21",
    "supertest": "^7.0.0",
    "ts-jest": "^29.2.5",
    "ts-loader": "^9.5.2",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.7.3",
    "typescript-eslint": "^8.20.0"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
