version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: zaiken-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: zaiken_db
      POSTGRES_USER: zaiken_user
      POSTGRES_PASSWORD: zaiken_password_secure_2024
      POSTGRES_SHARED_BUFFERS: 256MB
      POSTGRES_EFFECTIVE_CACHE_SIZE: 1GB
      POSTGRES_WORK_MEM: 4MB
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - zaiken-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U zaiken_user -d zaiken_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  backend:
    build:
      context: https://github.com/andressalvarez/Contabilidad-ZAIKEN.git#main:backend
      dockerfile: Dockerfile
      target: production
    container_name: zaiken-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3004
      DATABASE_URL: postgresql://zaiken_user:zaiken_password_secure_2024@postgres:5432/zaiken_db
      JWT_SECRET: zaiken_jwt_secret_very_secure_2024
      CORS_ORIGIN: ${DOMAIN_URL}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - zaiken-network
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      - backend_logs:/app/logs
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  frontend:
    build:
      context: https://github.com/andressalvarez/Contabilidad-ZAIKEN.git#main:frontend
      dockerfile: Dockerfile
    container_name: zaiken-frontend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: ${DOMAIN_URL}/api/v1
      NEXT_PUBLIC_APP_URL: ${DOMAIN_URL}
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - zaiken-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  nginx:
    image: nginx:alpine
    container_name: zaiken-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend
    networks:
      - zaiken-network
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  backend_logs:
    driver: local

networks:
  zaiken-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
